{"version":3,"sources":["App.js","index.js"],"names":["App","useState","location","setLocation","chek","setChek","weather","setWeather","setMunicipio","inputValue","setInputValue","getWeather","lat","long","a","axios","get","params","lon","appid","process","lang","units","res","data","console","log","gWheather","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","className","clasName","name","main","temp","description","src","icon","alt","type","id","onChange","t","target","value","placeholder","size","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"opuoBA+GeA,MAtGf,WAAgB,IAAD,EAEmBC,oBAAS,GAF5B,mBAENC,EAFM,KAEIC,EAFJ,OAGWF,oBAAS,GAHpB,mBAGNG,EAHM,KAGAC,EAHA,OAIiBJ,mBAAS,IAJ1B,mBAINK,EAJM,KAIGC,EAJH,OAKqBN,mBAAS,cAL9B,mBAKKO,GALL,aAMuBP,mBAAS,IANhC,mBAMNQ,EANM,KAMMC,EANN,KA0BTC,EAAU,uCAAG,WAAOC,EAAKC,GAAZ,eAAAC,EAAA,6DAEfP,EAAW,IAFI,SAGCQ,IAAMC,IAAI,iDAAkD,CAC1EC,OAAQ,CAENL,IAAKA,EACLM,IAAKL,EACLM,MAAOC,mCACPC,KAAM,KACNC,MAAO,YAVI,OAGXC,EAHW,OAcfhB,EAAWgB,EAAIC,MACfC,QAAQC,IAAIpB,GACZE,EAAaC,GAhBE,2CAAH,wDAmBVkB,EAAS,uCAAG,4BAAAb,EAAA,sEACGC,IAAMC,IAAN,2DAA8DP,GAAc,CAC3FQ,OAAQ,CACNE,MAAO,mCACPE,KAAM,KACNC,MAAO,YALG,OACTC,EADS,OAQdE,QAAQC,IAAIH,EAAIC,MAChBjB,EAAWgB,EAAIC,MACfnB,GAAQ,GAVM,2CAAH,qDAuBb,OARAuB,qBAAU,WACRC,UAAUC,YAAYC,oBAAmB,SAACC,GAC1CrB,EAAWqB,EAASC,OAAOC,SAAUF,EAASC,OAAOE,WAErDhC,GAAY,QAEX,KAEc,IAAbD,EAEA,qBAAKkC,UAAU,MAAf,SACE,4FAKF,qBAAKA,UAAU,MAAf,SAEE,sBAAKA,UAAU,YAAf,UAEE,6BAAI,4DACJ,sBAAKA,UAAU,iBAAf,UACE,qBAAIC,SAAS,WAAb,eACU,IAATjC,EAAA,UACME,EAAQgC,KADd,cACwBhC,EAAQiC,KAAKC,KADrC,kBACgDlC,EAAQA,QAAQ,GAAGmC,YADnE,KAEG,mBAHJ,OAIA,qBAAKC,KAAe,IAATtC,EAAA,2CAAoDE,EAAQA,QAAQ,GAAGqC,KAAvE,WAAuF,GAAKC,IAAI,QAI7G,sBAAKR,UAAU,gBAAf,UACE,uBAAOS,KAAK,OAAOP,KAAK,OAAOQ,GAAG,OAAOC,SAnFnD,SAAkBC,GAAG,IAAD,EACKA,EAAEC,OAAXC,GADI,EACVZ,KADU,EACJY,OACdxC,EAAcwC,IAiFuDC,YAAY,wBACzE,qBAAIf,UAAU,YAAd,cAA4B,cAAC,IAAD,CAAegB,KAAM,GAAIC,QAAS,kBAAM1B,OAApE,gBCjGZ2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d6ec2026.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { AiOutlineSearch, AiOutlineSend } from 'react-icons/ai';\nimport municipios from './json/municipios.json'\n\n//Components\n// import Search from './components/search'\nimport style from './style.css'\n\nfunction App() {\n\n  const [location, setLocation] = useState(true);\n  const [chek, setChek] = useState(false);\n  const [weather, setWeather] = useState({});\n  const [municipio, setMunicipio] = useState('Diamantina')\n  const [inputValue, setInputValue] = useState('');\n\n  function onChange(t){\n    const { name, value} = t.target;\n    setInputValue(value);\n  }\n\n  const takeInputValue = async () =>{\n    alert(inputValue)\n    const res = await municipios.filter( function(res){ return res.nome === inputValue } );\n    \n    if(res.length < 1 ){\n      console.log('Não encontramos a cidade')\n    }else{\n      console.log(res[0].nome)\n      // setInputValue('')\n      getWeather(res[0].latitude, res[0].longitude)\n    }\n  }\n\n  let getWeather = async (lat, long) => {\n\n    setWeather('');\n    let res = await axios.get('http://api.openweathermap.org/data/2.5/weather', {\n      params: {\n        \n        lat: lat,\n        lon: long,\n        appid: process.env.REACT_APP_KEY,\n        lang: 'pt',\n        units: 'metric'\n      }\n    });\n    // console.log(res.data)\n    setWeather(res.data);\n    console.log(weather);\n    setMunicipio(inputValue)\n  }\n\n  let gWheather = async () => {\n     let res = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${inputValue}`, {\n      params: {\n        appid: '5cd879df07f8d1baba40888c25742fe5',\n        lang: 'pt',\n        units: 'metric'\n      }\n    });\n    console.log(res.data)\n    setWeather(res.data);\n    setChek(true);\n    // console.log(weather);\n    // setMunicipio(inputValue)\n  }\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n    getWeather(position.coords.latitude, position.coords.longitude);\n    //console.log(position.coords.latitude, position.coords.longitude);\n    setLocation(true)\n    })\n  }, []);\n\n  if (location === false) {\n    return (\n      <div className=\"App\">\n        <h1>Você precisa habilitar a localização no browser</h1>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"App\">\n        \n        <div className=\"container\">\n\n          <h1><strong>Previsão do Tempo</strong></h1>\n          <div className=\"previsalResult\">\n            <h1 clasName=\"previsao\"> {\n             chek === true\n              ? `${weather.name} - ${weather.main.temp}º - ${weather.weather[0].description} ` \n              : 'Informe a cidade' } </h1>\n            <img src={ chek === true ? `http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png` : '' } alt=\"\"/>\n          </div>\n\n\n          <div className=\"content-input\">\n            <input type=\"text\" name=\"text\" id=\"text\" onChange={onChange} placeholder=\"Pesquise por cidade\" ></input>\n            <h3 className=\"send-icon\" > <AiOutlineSend size={25} onClick={() => gWheather()} /> </h3>\n          </div>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n// <h1><strong>Previsão do Tempo</strong></h1>\n// <h1 className=\"previsao\">{municipio} - {`${weather.main.temp}º ${weather.weather[0].description}`}\n// <img src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt=\"\"/>\n// </h1>\n\n// <div className=\"content-input\">\n//   <input type=\"text\" name=\"text\" id=\"text\" value={`${inputValue}`} onChange={onChange} placeholder=\"Pesquise por cidade\" />\n//   {/* <h3 className=\"search-icon\" > <AiOutlineSearch size={25} /> </h3> */}\n//   <h3 className=\"send-icon\" > <AiOutlineSend size={25} onClick={() => takeInputValue()} /> </h3>\n// </div>\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}